# -*- coding: utf-8 -*-

import prettytable as pt
import telebot
import sys
import logging
import time

from utils import config as cfg_utils
from mks import check

from telebot.types import ReplyKeyboardRemove

sys.path.append('../resources/')
config = cfg_utils.load("../resources/config.yml")

bot = telebot.TeleBot(config["telegram"]["token"])
telebot.logger.setLevel(logging.INFO)

text_messages = {
    'start': u'{name}, –ø—Ä–∏–≤–µ—Ç! üéâ –í—ã–±–µ—Ä–∏ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ–µ –¥–µ–π—Å—Ç–≤–∏–µ –≤ –º–µ–Ω—é ‚ú®',

    'help': '/help - –ø–æ–∫–∞–∑–∞—Ç—å –¥–∞–Ω–Ω—É—é –ø–æ–¥—Å–∫–∞–∑–∫—É',

    'wrong_msg': '–ü–æ—Ö–æ–∂–µ —á—Ç–æ-—Ç–æ –ø–æ—à–ª–æ –Ω–µ —Ç–∞–∫. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–æ—Å–ø–æ–ª—å–∑—É–π—Ç–µ—Å—å –ø–æ–¥—Å–∫–∞–∑–∫–æ–π —á–µ—Ä–µ–∑ /help –∏–ª–∏ –Ω–∞—á–Ω–∏—Ç–µ –∑–∞–Ω–æ–≥–æ —á–µ—Ä–µ–∑ /start'
}


@bot.message_handler(commands=['help'])
def handler_help(message):
    try:
        bot.send_message(
            message.from_user.id,
            text_messages['help'],
            reply_markup=ReplyKeyboardRemove()
        )
    except Exception as ex:
        logging.error(ex)


@bot.message_handler(commands=['start'])
def handler_start(message):
    markup = telebot.types.ReplyKeyboardMarkup(resize_keyboard=True)
    markup.row('–≤—ã–≥–æ–≤–æ—Ä–∏—Ç—å—Å—è', '–ø–æ—Å–º–æ—Ç—Ä–µ—Ç—å –∏—Å—Ç–æ—Ä–∏—é', '–ø–æ–º–æ—â—å')

    try:
        msg = bot.send_message(
            message.from_user.id,
            text_messages['start'].format(name=message.from_user.first_name),
            reply_markup=markup
        )
    except Exception as ex:
        logging.error(ex)


@bot.message_handler(commands=['status'])
def handler_start(message):
    markup = telebot.types.ReplyKeyboardMarkup(resize_keyboard=True)

    try:
        table = check.check_status(config["clients"])
        msg = bot.send_message(
            message.from_user.id,
            f"```{table}```",
            parse_mode='MarkdownV2'
        )
    except Exception as ex:
        logging.error(ex)


def run():
    while True:
        try:
            bot.polling(non_stop=True, interval=0, timeout=10)
        except Exception as ex:
            logging.info("[telegram] Failed: %s" % ex)
            time.sleep(3)
